name: PR

on:
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  repo_builds: bcgov/quickstart-openshift

jobs:
  database:
    name: Database
    runs-on: ubuntu-latest
    timeout-minutes: 1
    outputs:
      triggered: ${{ steps.triggered.outputs.triggered }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./
        id: triggered
        with:
          file: templates/database.yml
          name: database
          oc_namespace: ${{ vars.OC_NAMESPACE }}
          oc_server: ${{ vars.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: false
          parameters: -p ZONE=${{ github.event.number }} -p NAME=${{ github.event.repository.name }}

  backend:
    name: Backend
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      triggered: ${{ steps.triggered.outputs.triggered }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./
        id: triggered
        with:
          file: templates/backend.yml
          name: backend
          oc_namespace: ${{ vars.OC_NAMESPACE }}
          oc_server: ${{ vars.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: yes
          parameters:
            -p ZONE=${{ github.event.number }} -p NAME=${{ github.event.repository.name }}
            -p MIN_REPLICAS=1 -p MAX_REPLICAS=2
          penetration_test: true
          verification_path: /api

  frontend:
    name: Deploys
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      triggered: ${{ steps.triggered.outputs.triggered }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./
        id: triggered
        with:
          file: templates/frontend.yml
          name: frontend
          oc_namespace: ${{ vars.OC_NAMESPACE }}
          oc_server: ${{ vars.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          oc_version: 4.13
          overwrite: true
          parameters:
            -p ZONE=${{ github.event.number }} -p NAME=${{ github.event.repository.name }}
            -p MIN_REPLICAS=1 -p MAX_REPLICAS=2
          penetration_test: false
          post_rollout: |
            oc create job "frontend-$(date +%s)" --from=cronjob/${{ github.event.repository.name }}-${{ github.event.number }}-cronjob

  results:
    name: Results
    needs: [database, backend, frontend]
    runs-on: ubuntu-latest
    timeout-minutes: 1
    steps:
      - run: |
          echo "Results? ${{ toJson(needs) }}"

